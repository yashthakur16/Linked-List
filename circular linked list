#include<iostream>
using namespace std;

class Node
{
    public:
    int data;
    Node* next;

    Node(int data)
    {
        this->data=data;
        this->next=NULL;
    }
};

void insertnode(Node* &tail,int element,int d)
{
    //Assumming the list is empty

    if(tail==NULL)
    {
        Node* newNode=new Node(d);
        tail=newNode;
        newNode->next=newNode;
        return ;
    }
    {
        //Element is present in the list
        Node* current=tail;

        while(current->data != element)
        {
            current=current->next;
        }

        Node* temp=new Node(d);
        temp->next=current->next;
        current->next=temp;

    }


}

void printnode(Node* &tail)
{
    if(tail==NULL)
    {
        cout<<"List is empty "<<endl;
    }
    Node* temp=tail;

    do
    {
        cout << temp-> data <<" ";
        temp=temp->next;
    }
    while (temp != tail);
    
    cout<<endl;
}

void deletenode(Node* &tail,int element )
{ 
    if(tail==NULL)
    {
        cout<<"The list is empty please check again ";
        return ;
    }
    Node* prev=tail;
    Node* current=prev->next;

        while(current->data != element)
        {
            prev=current;
            current=current->next;

        }
        if(current==prev)
        {
            tail=NULL;
        }
        prev->next=current->next;

        if(tail==current)
        {
            tail=prev;
        }
        
        
        current->next=NULL;
        delete current;
}


int main()
{
    Node* tail=NULL;
    
    insertnode(tail,5,3);
    
    printnode(tail);

    insertnode(tail,3,5);

    printnode(tail);

    insertnode(tail,5,7);

    printnode(tail);

    insertnode(tail,7,9);

    printnode(tail);

    insertnode(tail,7,8);
    printnode(tail);

    insertnode(tail,3,4);
    printnode(tail);

    deletenode(tail,3);
    printnode(tail);




    return 0;

}
